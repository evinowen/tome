version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:
  load:
    executor:
      name: win/default
    steps:
      - checkout
      - restore_cache:
          name: Restore NodeJS Modules and Yarn Cache
          keys:
            - yarn-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install
          command: yarn install --frozen-lockfile
      - persist_to_workspace:
          root: .
          paths:
            - .
      - save_cache:
          name: Store NodeJS Modules and Yarn Cache
          key: yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~\AppData\Local\Yarn\Cache
            - ./node_modules
  test:
    executor:
      name: win/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Lint
          command: yarn lint
      - run:
          name: Run Unit Tests
          command: yarn electron:test:unit
      - store_test_results:
          name: Store Test Results
          path: reports/junit
      - store_artifacts:
          name: Store Coverage Reports
          path: reports/coverage/lcov-report
          destination: coverage

  build:
    executor:
      name: win/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: yarn electron:build
      - run:
          name: Set PACKAGE_NAME Environment Variable
          command: $env:PACKAGE_NAME = (Get-Content -Raw -Path package.json | ConvertFrom-Json).name
      - run:
          name: Set PACKAGE_VERSION Environment Variable
          command: $env:PACKAGE_VERSION = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
      - persist_to_workspace:
          root: .
          paths:
            - "./dist_electron/win-unpacked/$($env:PACKAGE_VERSION) Setup $($env:PACKAGE_VERSION).exe"
      - store_artifacts:
          name: Store Installer
          path: "./dist_electron/win-unpacked/$($env:PACKAGE_VERSION) Setup $($env:PACKAGE_VERSION).exe"
          destination: installer

  publish:
    executor:
      name: win/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install ghr
          command: go get github.com/tcnksm/ghr
      - run:
          name: Set PACKAGE_NAME Environment Variable
          command: $env:PACKAGE_NAME = (Get-Content -Raw -Path package.json | ConvertFrom-Json).name
      - run:
          name: Set PACKAGE_VERSION Environment Variable
          command: $env:PACKAGE_VERSION = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
      - run:
          name: Publish Build
          command: ghr -t $env:GITHUB_TOKEN -u $env:CIRCLE_PROJECT_USERNAME -r $env:CIRCLE_PROJECT_REPONAME -c $env:CIRCLE_SHA1 -delete $env:env:PACKAGE_VERSION "./dist_electron/win-unpacked/$($env:PACKAGE_VERSION) Setup $($env:PACKAGE_VERSION).exe"

workflows:
  version: 2
  execute:
    jobs:
      - load
      - test:
          requires:
            - load
      - build:
          requires:
            - test            
      - publish:
          requires:
            - build
